{
    "collab_server" : "",
    "contents" : "#' Make a record button for UI.\n#'\n#' @param id the id you will use to keep track of this component in your app\n#' @return A blue button that you press to initiate or stop recording of sound.\n#' @examples\n#' shinyearrUI('myrecorder')\nshinyearrUI <- function(id) {\n  ns <- NS(id)\n\n  #Grab the external javascript and css\n  earjs  <- .get_script(\"earr.js\", \"js\")\n  earcss <- .get_script(\"earr.css\", \"css\")\n\n  tagList(\n    singleton(\n      tags$head( #load external scripts.\n        tags$script(HTML(earjs)),\n        tags$style(HTML(earcss))\n      )\n    ),\n    div(id=ns(\"recordButton\"), class = \"recordButton\", span(\"Start Recording\"))\n  ) #end tag list.\n}\n\n\n#' Gather recorded data from UI.\n#'\n#' Exports a reactive array of length 256, corresponding to a fourier transform of the sound waves of your recoding. This is a frequently used format for running various speech recognition algorithms on. Future edditions will allow access to the raw data.\n#'     This is the server component of shinyearr. You never directly use this function but instead call it through the shiny function `callModule()`. See the example for how to do this.\n#'\n#' @param input you can ignore this as it is taken care of by shiny\n#' @param output you can ignore this as it is taken care of by shiny\n#' @param session you can ignore this as it is taken care of by shiny\n#' @export\n#' @examples\n#' callModule(shinyearr, \"myrecorder\")\nshinyearr <- function(input, output, session){\n\n  #the id of our given recorder button. We send this to javascript.\n  button_id <- gsub(\"-\", \"\", session$ns(\"\"))\n\n  #Send over a message to the javascript to initialize the recoder code\n  observe({ session$sendCustomMessage(type = \"initialize_recorder\", message = button_id) })\n\n  # The user's data, parsed into a data frame\n  result <- reactive({ input$recordingEnded })\n\n  return(result)\n}\n",
    "created" : 1489961478706.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2953337742",
    "id" : "3BE91A57",
    "lastKnownWriteTime" : 1489962543,
    "last_content_update" : 1489962543833,
    "path" : "~/Dropbox/spring_17/inference/shinyearr/R/shinyearr.R",
    "project_path" : "R/shinyearr.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}